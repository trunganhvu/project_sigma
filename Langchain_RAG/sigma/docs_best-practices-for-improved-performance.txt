Home
Community
QuickStarts
Status
Documentation
API Recipes
API Reference
What's New
Search
START
About Sigma
Start using Sigma
CONNECT
Connect to data sources
Manage connections
ADD DATA
CSV uploads
Input tables
MODEL
Get started with data modeling (Beta)
Data models (Beta)
Model data from database tables
Datasets
Add and manage data
Join data
Transform data
ANALYZE
Workbook basics
Build a workbook
Data elements
Tables
Query
MANAGE WORKBOOKS
Manage a workbook
Workbook templates
Workbook lifecycle
Workbook performance
Workbook security
Manage SQL queries
CHART
Intro to charts
Build a chart
Customize a chart
FILTER
Filter data
Intro to control elements
Work with controls
DESIGN
Design layout
UI elements
Workbook formatting
ADD LOGIC
Intro to actions
Create workbook actions
Configure workbook actions
INTERACT
Interact with workbooks
Interact with charts
Collaborate in workbooks
Search for files in your organization
SHARE
Share a workbook
Share a folder
Share templates
Send or schedule workbook exports
Export data
Manage scheduled exports
About exporting data
CALCULATE
Operators overview
Use AI with formulas (Beta)
Perform AI queries
Functions
Metrics
Custom functions
EMBED
Intro to embedded analytics
Public embedding
Secure embedding
Advanced data security in embeds
Additional embedding configurations
Embed SDK for React
DEVELOP
Sigma API
Plugin development
ADMIN
Administer Sigma
Users and teams
Permissions
Authentication
Third-party integrations
Organization settings
Customize
Localize
Manage assets
Audit and usage
Develop
SUPPORT
Sigma support
Sigma product releases
Supported regions, data platforms, and features
Best practices for improved performance
This document gathers some best practices related to performance for you to consider.
Suggest Edits
Use datasets to reduce query loads
Sigma uses datasets to centralize data definitions and provide source data for workbooks. For more information about using datasets see Data modeling In Sigma and Data modeling tutorial.
Reduce the amount of unneeded data returned in a workbook query by using filters at the dataset level. Filters cut out irrelevant data without being restrictive. Surfacing only the most relevant data makes the process of discovering insights much quicker. When combined with materialization, it also means queries run faster.
Dataset time range filters
Use relative date filters to ensure that Sigma queries return only a specific time range of data. For more information see Add relative date filters and Dataset filters.
Dataset parameters
Create dataset parameters and use them in worksheets to ensure that the data filters to only the necessary data.  For more information see Dataset parameters.
Materialize datasets and workbook elements to reduce compute costs
Materializations allows you to write datasets and workbook elements back to your warehouse as tables which can reduce compute costs. Materialization enhances query performance by allowing your data warehouse to avoid recomputing the dataset when it's used by an element or a in descendant Sigma analysis. For more information see Materialization.
Use a query cache in the CDW
Some cloud data warehouses (CDW) have a query results cache that Sigma can use to retrieve query results without incurring additional compute costs. This leads to better performance. For more information see Set a cache duration.
More tips for improving workbook performance
Excessive joins, repeated logic, unused data, and filter overload can slow down your workbook. For performance tips, see How to improve workbook performance in the Sigma Community.
RELATED RESOURCES
Data modeling with datasets
Materialization with Sigma (QuickStart)
Benefits of Materializing Datasets (Community)
What can slow your Sigma workbook down! (Community)
Resources
Sigma home
Blog
Learn
Product FAQs
Â© 2025 Sigma Computing