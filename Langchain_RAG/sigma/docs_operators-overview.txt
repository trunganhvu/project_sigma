Home
Community
QuickStarts
Status
Documentation
API Recipes
API Reference
What's New
Search
START
About Sigma
Start using Sigma
CONNECT
Connect to data sources
Manage connections
ADD DATA
CSV uploads
Input tables
MODEL
Get started with data modeling (Beta)
Data models (Beta)
Model data from database tables
Datasets
Add and manage data
Join data
Transform data
ANALYZE
Workbook basics
Build a workbook
Data elements
Tables
Query
MANAGE WORKBOOKS
Manage a workbook
Workbook templates
Workbook lifecycle
Workbook performance
Workbook security
Manage SQL queries
CHART
Intro to charts
Build a chart
Customize a chart
FILTER
Filter data
Intro to control elements
Work with controls
DESIGN
Design layout
UI elements
Workbook formatting
ADD LOGIC
Intro to actions
Create workbook actions
Configure workbook actions
INTERACT
Interact with workbooks
Interact with charts
Collaborate in workbooks
Search for files in your organization
SHARE
Share a workbook
Share a folder
Share templates
Send or schedule workbook exports
Export data
Manage scheduled exports
About exporting data
CALCULATE
Operators overview
Use AI with formulas (Beta)
Perform AI queries
Functions
Metrics
Custom functions
EMBED
Intro to embedded analytics
Public embedding
Secure embedding
Advanced data security in embeds
Additional embedding configurations
Embed SDK for React
DEVELOP
Sigma API
Plugin development
ADMIN
Administer Sigma
Users and teams
Permissions
Authentication
Third-party integrations
Organization settings
Customize
Localize
Manage assets
Audit and usage
Develop
SUPPORT
Sigma support
Sigma product releases
Supported regions, data platforms, and features
Operators overview
Suggest Edits
Sigma supports basic operators for calculations, evaluating them in accepted order. You can use these operators when developing the conditions of Logical functions.
Sigma supports the following operators:
Example
When calculating values, such as using the addition operator + to add two values, the result is Null if one of the values is Null.
[Column 1] + [Column 2]
If the value of [Column 2]  is Null, then the result of the entire formula is Null.
To resolve this, you can apply the Zn function to each value, to substitute 0 for Null:
Zn([Column 1]) + Zn([Column 2])
.
Class division notation. Used to navigate through the levels of Variant and JSON data types
+
Adds two numbers
-
Subtracts one number from another
*
Multiplies two numbers
/
Divides one number by another
^
Raises a number to the specified power
%
Modulo computes the remainder of dividing X by Y
&
Ampersand concatenates two strings together
<
Determines if X is less than Y
<=
Returns whether X is less than or equal to Y
>
Returns whether X is greater than y
>=
Returns whether X is greater than or equal to y
=
Returns whether x is equal to y
!=
Returns whether x is not equal to y
()
Used to change the order of operations
AND
Returns whether two logical values are both TRUE
OR
Returns whether either of two logical values are TRUE
NOT
Negate a value or expression
TRUE
Interpreted as the Boolean literal TRUE
FALSE
Interpreted as the Boolean literal FALSE
NULL
Interpreted as a null literal
Resources
Sigma home
Blog
Learn
Product FAQs
Â© 2025 Sigma Computing